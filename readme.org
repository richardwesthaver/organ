#+TITLE: organ
#+DESCRIPTION: custom org-mode parser
#+AUTHOR: ellis

This is a modular tool for extracting information from emacs org-mode
files. It's highly opinionated and only suited for parsing my
documents. This means I may introduce syntax which is not supported by
or which can't be interpreted by Emacs Org-Mode. It also means that
/the complete Org-element API will not be supported/. The most
troublesome of org-mode features are simply ignored.

This project is driven by the idea that org-mode is pretty cool, but
that previous attempts to build a robust parser implementation have
been hindered by their attempts to clone the functionality as well.

My goals are as follows:
- org->sxp :: takes org-mode stream outputs SXP forms
- parallel :: take advantage of multi-threading to parse multiple
  trees simultaneously
- composable :: specialized methods for combining and composing
  org-mode nodes

  #+begin_src sh :results output replace
    make test
  #+end_src

  #+RESULTS:
  #+begin_example
  sbcl --noinform --non-interactive --eval '(asdf:load-asd "organ.asd")' --eval '(ql:quickload :organ)' --eval '(ql:quickload :organ/cli)' --eval '(ql:quickload :organ/tests)'  --eval '(in-package :organ-tests)' --eval "(run! 'organ)"
  To load "organ":
    Load 1 ASDF system:
      organ
  ; Loading "organ"

  To load "organ/cli":
    Load 1 ASDF system:
      organ/cli
  ; Loading "organ/cli"

  To load "organ/tests":
    Load 1 ASDF system:
      organ/tests
  ; Loading "organ/tests"


  Running test suite ORGAN
   Running test ORG->SXP f
   Running test SXP->ORG f
   Running test suite ORGAN-CLI
    Running test SANITY .
    Running test INPUT .
    Running test OUTPUT .
   Did 5 checks.
      Pass: 3 (60%)
      Skip: 0 ( 0%)
      Fail: 2 (40%)

   Failure Details:
   --------------------------------
   SXP->ORG in ORGAN []: 

  NIL

   was NIL.
   --------------------------------
   --------------------------------
   ORG->SXP in ORGAN []: 

  NIL

   was NIL.
   --------------------------------

  #+end_example
